version: "3.9"

services:
  # Web API Server
  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
      target: deploy
    ports:
      - 8080:8080
    environment:
      - SERVER_PORT=8080
    depends_on:
      db:
        condition: service_healthy
      storage:
        condition: service_healthy
      mq:
        condition: service_healthy

  # Image Super-Resolution Worker
  isr-worker:
    container_name: isr-worker
    build:
      context: ./isr
      dockerfile: Dockerfile

  # Database
  db:
    container_name: db
    image: postgres:15.4
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 3

  # Object Storage
  storage:
    container_name: storage
    image: quay.io/minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: ["server", "--console-address", ":9090", "/data"]
    ports:
      - 9000:9000
      - 9090:9090
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 5s
      timeout: 5s
      retries: 3

  ## Message Queue
  mq:
    container_name: mq
    image: rabbitmq:3.12.11-management
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3
